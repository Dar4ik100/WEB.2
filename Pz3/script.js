"use strict";

console.log("–ü—ñ–¥–∫–ª—é—á–µ–Ω–æ JavaScript –¥–ª—è –ü—Ä–∞–∫—Ç–∏—á–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ ‚Ññ3");

// 2.1 –û–±'—î–∫—Ç–Ω–∏–π –ª—ñ—Ç–µ—Ä–∞–ª
const car = {
  brand: "Toyota",
  year: 2020,
  displayInfo() {
    console.log(`üöó –ê–≤—Ç–æ–º–æ–±—ñ–ª—å: ${this.brand}, –†—ñ–∫: ${this.year}`);
  }
};
car.displayInfo();

// 2.2 –ú–µ—Ç–æ–¥ –∑ this
const person = {
  name: "–Ü–≤–∞–Ω",
  sayHello() {
    console.log(`üëã –ü—Ä–∏–≤—ñ—Ç, –º–µ–Ω–µ –∑–≤—É—Ç—å ${this.name}`);
  }
};
person.sayHello();

// 3.1 –§—É–Ω–∫—Ü—ñ—è-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
function Person(name, age) {
  this.name = name;
  this.age = age;
}
Person.prototype.greet = function () {
  console.log(`üôã‚Äç‚ôÄÔ∏è –ü—Ä–∏–≤—ñ—Ç, —è ${this.name} —ñ –º–µ–Ω—ñ ${this.age} —Ä–æ–∫—ñ–≤.`);
};
const person1 = new Person("–û–ª–µ–Ω–∞", 28);
person1.greet();

// 3.2 ES6 –∫–ª–∞—Å + –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è
class Student extends Person {
  constructor(name, age, grade) {
    super(name, age);
    this.grade = grade;
  }

  displayInfo() {
    console.log(`üéì –°—Ç—É–¥–µ–Ω—Ç: ${this.name}, –í—ñ–∫: ${this.age}, –û—Ü—ñ–Ω–∫–∞: ${this.grade}`);
  }
}
const student1 = new Student("–ê–Ω–¥—Ä—ñ–π", 22, "A");
student1.greet();
student1.displayInfo();

// 3.3 –Ü–Ω–∫–∞–ø—Å—É–ª—è—Ü—ñ—è —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä–∏ —Ç–∞ —Å–µ—Ç—Ç–µ—Ä–∏
class User {
  constructor(name, age) {
    this._name = name;
    this._age = age;
  }

  get name() {
    return this._name;
  }

  set name(newName) {
    if (newName) this._name = newName;
  }

  get age() {
    return this._age;
  }

  set age(newAge) {
    if (newAge > 0) this._age = newAge;
  }

  display() {
    console.log(`üë©‚Äçüíº –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: ${this._name}, –í—ñ–∫: ${this._age}`);
  }
}

const user1 = new User("–ú–∞—Ä—ñ—è", 30);
user1.display();
user1.name = "–û–∫—Å–∞–Ω–∞";
user1.age = 32;
user1.display();

// 4.1 –ö–æ–º–ø–ª–µ–∫—Å–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è: –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
class LibraryUser {
  constructor(name, age, profession) {
    this.name = name;
    this.age = age;
    this.profession = profession;
  }

  display() {
    console.log(`üìö –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: ${this.name}, –í—ñ–∫: ${this.age}, –ü—Ä–æ—Ñ–µ—Å—ñ—è: ${this.profession}`);
    alert(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: ${this.name}\n–í—ñ–∫: ${this.age}\n–ü—Ä–æ—Ñ–µ—Å—ñ—è: ${this.profession}`);
  }
}

class Admin extends LibraryUser {
  constructor(name, age, profession, role) {
    super(name, age, profession);
    this.role = role;
  }

  display() {
    console.log(`üõ°Ô∏è –ê–¥–º—ñ–Ω: ${this.name}, –í—ñ–∫: ${this.age}, –ü—Ä–æ—Ñ–µ—Å—ñ—è: ${this.profession}, –†–æ–ª—å: ${this.role}`);
    alert(`–ê–¥–º—ñ–Ω: ${this.name}\n–í—ñ–∫: ${this.age}\n–ü—Ä–æ—Ñ–µ—Å—ñ—è: ${this.profession}\n–†–æ–ª—å: ${this.role}`);
  }
}

// –í–≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
let name = prompt("–í–≤–µ–¥—ñ—Ç—å —ñ–º‚Äô—è:");
let age = Number(prompt("–í–≤–µ–¥—ñ—Ç—å –≤—ñ–∫:"));
while (isNaN(age) || age <= 0) {
  age = Number(prompt("–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π –≤—ñ–∫ (—á–∏—Å–ª–æ –±—ñ–ª—å—à–µ 0):"));
}
let profession = prompt("–í–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—ñ—è?");
let isAdmin = confirm("–¶–µ –∞–¥–º—ñ–Ω?");

let user;
if (isAdmin) {
  let role = prompt("–í–≤–µ–¥—ñ—Ç—å —Ä–æ–ª—å (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 'SuperAdmin'):");
  user = new Admin(name, age, profession, role);
} else {
  user = new LibraryUser(name, age, profession);
}
user.display();
